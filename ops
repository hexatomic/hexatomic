{"version":1,"ops":[{"type":6,"author":{"id":"7fc094c5f01526c965e541ec82007c487f6fa288"},"timestamp":1581962918,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDozNTE3MzcyMTY="},"target":"fc0bf94464495b61f96043ab2960937f7268162c49d434c26c64ee2207c1fe64","message":"**Describe the bug**\n\nhttps://hexatomic.github.io/hexatomic/dev/v0.3/development/logging-error-handling.html should describe the prerequisites for injecting and using the error service.\n\n**To reproduce the bug**\nSteps to reproduce the behavior:\n1. Create a bundle\n2. Inject `ErrorService` into a class that is not, e.g., an `MPart`\n3. Use `ErrorService` instance\n3. NPE (`ErrorService` is `null`).\n\n**Expected behavior**\n\nI'd like to find out (from the docs) why injecting and using the `ErrorService` throws an NPE, or rather, how it is injected, i.e., that it can only be injected into \"context classes\", and must be passed on if it should be used in any non-context classes.\n\nIt can be discussed, whether these \"other\" classes should be able to get a hold of the service at all...","files":null},{"type":5,"author":{"id":"7fc094c5f01526c965e541ec82007c487f6fa288"},"timestamp":1581961049,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDMwNDQ1Njk0MTY="},"added":["bug"],"removed":[]},{"type":2,"author":{"id":"7fc094c5f01526c965e541ec82007c487f6fa288"},"timestamp":1581962843,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MzA0NDYzOTcxOA=="},"title":"Document that ErrorService can only be injected into classes registered in the application context","was":"Document that ErrorService can only be injected into classes registered in the application context"},{"type":5,"author":{"id":"7fc094c5f01526c965e541ec82007c487f6fa288"},"timestamp":1581962929,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDMwNDQ2NDMxMzI="},"added":["discussion"],"removed":[]},{"type":3,"author":{"id":"725ac77188b9c2093ea4100ba878cd5190f5dc34"},"timestamp":1582128289,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU4ODI5Njc0Ng==","github-url":"https://github.com/hexatomic/hexatomic/issues/152#issuecomment-588296746"},"message":"We already link to the general description of how dependency injection works in the \"Data model\" section (http://web.archive.org/web/20190807184652/https://www.vogella.com/tutorials/EclipseRCP/article.html#dependency-injection-and-eclipse). We might also add the link in this chapter and/or link Eclipse RCP documentation about dependency injection, but we should not try to write our own RCP docs.","files":null},{"type":5,"author":{"id":"725ac77188b9c2093ea4100ba878cd5190f5dc34"},"timestamp":1582129038,"metadata":{"github-id":"MDE0OlVubGFiZWxlZEV2ZW50MzA1MjM1MTE1Mw=="},"added":[],"removed":["bug"]},{"type":5,"author":{"id":"725ac77188b9c2093ea4100ba878cd5190f5dc34"},"timestamp":1582129038,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDMwNTIzNTExNTU="},"added":["docs-dev-maint"],"removed":[]},{"type":3,"author":{"id":"725ac77188b9c2093ea4100ba878cd5190f5dc34"},"timestamp":1582129188,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU4ODMwNTM5Mg==","github-url":"https://github.com/hexatomic/hexatomic/issues/152#issuecomment-588305392"},"message":"I changed the label from \"bug\" to \"docs-dev-maint\" because I think the former one is not appropriate. The described behaviour is how Eclipse RCP works and there is nothing wrong with it. Also, the documentation is not specific at this point, but it actually does not claim you can use it in classes not handled by the Eclipse RCP dependency injection context.","files":null},{"type":3,"author":{"id":"725ac77188b9c2093ea4100ba878cd5190f5dc34"},"timestamp":1582324226,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDU4OTg2NDQwOA==","github-url":"https://github.com/hexatomic/hexatomic/issues/152#issuecomment-589864408"},"message":"I actually found a solution how to use the injected services in the UI integration tests.\nThe trick is, that we already have the `IEclipseContext` via the `ContextHelper` class. \nWe can then call `ContextInjectionFactory.make(...)` to get an instance of the actual valid service.\n```java\nimport org.eclipse.e4.core.contexts.ContextInjectionFactory;\nimport org.eclipse.e4.core.contexts.IEclipseContext;\n\n/* ... */\n\n  ProjectManager projectManager;\n\n  @BeforeEach\n  void setup() {\n    IEclipseContext ctx = ContextHelper.getEclipseContext();\n\n    projectManager = ContextInjectionFactory.make(ProjectManager.class, ctx);\n  }\n```\n\nI'm using this in the `feature/save-project` branch to call the `ProjectManager`directly and get the  Salt graphs: https://github.com/hexatomic/hexatomic/blob/5a666cbf467df15a49b507b11e74f3689d81271d/tests/org.corpus_tools.hexatomic.it.tests/src/main/java/org/corpus_tools/hexatomic/it/tests/TestProjectManager.java#L103","files":null}]}