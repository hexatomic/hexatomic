name: Automated tests
on: push

jobs:
  test_jdk8:
    name: OpenJDK 8
    runs-on: ubuntu-20.04
    steps:
      # install additional packages
      - run: sudo apt-get update && sudo apt-get install openjdk-8-jre-headless metacity
      # Start virtual X server in background and also a window manager (metacity)
      - run: "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1920x1080x16"
      - run: sleep 5 && metacity --sm-disable --replace 2> metacity.err &
        env:
          DISPLAY: :99.0
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-8-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-8-
      - name: Run Maven install (includes tests)
        run: mvn verify
        env:
          DISPLAY: :99.0
  test_jdk11:
    name: OpenJDK 11 + SonarCloud code analysis
    runs-on: ubuntu-20.04
    steps:
      # install additional packages
      - run: sudo apt-get update && sudo apt-get install openjdk-11-jre-headless metacity
      # Start virtual X server in background and also a window manager (metacity)
      - run: "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1920x1080x16"
      - run: sleep 5 && metacity --sm-disable --replace 2> metacity.err &
        env:
          DISPLAY: :99.0
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Otherwise the new code can't be determined or code coverage is less informing
          fetch-depth: 0
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-11-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-11-
      - name: Set JAVA_HOME to included JDK 11
        run: echo JAVA_HOME=$JAVA_HOME_11_X64 >> $GITHUB_ENV
      - name: Run Maven Tests with enabled code coverage and upload results to SonarCloud
        run: mvn clean verify sonar:sonar -Pcoverage -Dsonar.projectKey=hexatomic_hexatomic -Dsonar.organization=hexatomic -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          DISPLAY: :99.0

  test_docs:
    name: Test documentation
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download and install mdBook 
        run: curl -L -o mdbook.tar.gz https://github.com/rust-lang-nursery/mdBook/releases/download/v$MDBOOK_VERSION/mdbook-v$MDBOOK_VERSION-x86_64-unknown-linux-gnu.tar.gz && tar -C $HOME/.cargo/bin/ -zvxf mdbook.tar.gz
        env:
          MDBOOK_VERSION: 0.3.1
      - run: mdbook test docs/user/
      - run: mdbook test docs/dev/