name: Deploy release binaries and documentation
on: 
  push:
    tags:
      - v*

jobs:
  deploy_binaries:
    name: Deploy release binaries
    runs-on: ubuntu-20.04
    steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Set JAVA_HOME to OpenJDK 8
          run: echo JAVA_HOME=$JAVA_HOME_8_X64 >> $GITHUB_ENV
        - name: Run Maven install (includes tests)
          run: xvfb-run mvn clean install
          env:
            LANG: en_US.UTF-8
        - name: Update CFF file
          run: mvn -f ./features/org.corpus_tools.hexatomic/pom.xml cff:create
          env:
            LANG: en_US.UTF-8
        - name: Build again with updated CFF file
          run: xvfb-run mvn clean verify
          env:
            LANG: en_US.UTF-8
        - name: Release assets on GitHub
          uses: softprops/action-gh-release@v0.1.5
          with:
            files: releng/org.corpus_tools.hexatomic.product/target/products/hexatomic-*.zip
            draft: true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy_documentation:
    name: Deploy documentation
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download and install mdBook 
        run: curl -L -o mdbook.tar.gz https://github.com/rust-lang-nursery/mdBook/releases/download/v$MDBOOK_VERSION/mdbook-v$MDBOOK_VERSION-x86_64-unknown-linux-gnu.tar.gz && tar -C $HOME/.cargo/bin/ -zvxf mdbook.tar.gz
        env:
          MDBOOK_VERSION: 0.3.1
      - name: Get the release version from the GITHUB_REF variable as new SHORT_VERSION variable
        run: echo "SHORT_VERSION=$(echo ${GITHUB_REF} | sed -E 's/^refs\/heads\/.*/develop/' | sed -E 's/^(refs\/tags\/v)?(.*)(\.[0-9]+)$/v\2/')" >> $GITHUB_ENV
      # Build all documentation
      - run: mdbook build --dest-dir book/user/${SHORT_VERSION} docs/user/
      - run: mdbook build --dest-dir book/dev/${SHORT_VERSION} docs/dev/
      - name: Checkout and prepare GitHub pages branch
        run: releng/sh/prepare-deploy-docs.sh
      # We use a special action to perform the push, so we can use the automatically created token
      - name: Push changes to GitHub pages branch
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: gh-pages
          branch: gh-pages
