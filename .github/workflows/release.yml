name: Deploy release binaries and documentation
on: 
  push:
    tags:
      - v*

jobs:
  deploy_binaries:
    name: Deploy release Windows and Linux binaries
    runs-on: ubuntu-22.04
    steps:
        - name: Update packages
          run: sudo apt-get update
        - name: Install metacity window manager for background tests
          run: sudo apt-get install metacity
        - name: Checkout
          uses: actions/checkout@v4
        - name: Set up Maven
          uses: stCarolas/setup-maven@v5
          with:
            maven-version: 3.8.7
        - name: Set JAVA_HOME to OpenJDK 17
          run: echo JAVA_HOME=$JAVA_HOME_17_X64 >> $GITHUB_ENV
        - name: Run Maven install (includes tests) and re-create CFF file
          run: ./releng/sh/metacity-run.sh mvn -Pcff clean install
          env:
            LANG: en_US.UTF-8
        - name: Build again with updated CFF file
          run: ./releng/sh/metacity-run.sh mvn clean verify
          env:
            LANG: en_US.UTF-8
        - name: Release assets on GitHub
          uses: softprops/action-gh-release@v0.1.5
          with:
            files: |
              releng/org.corpus_tools.hexatomic.product/target/products/hexatomic-*-linux.gtk.x86_64.tar.gz
              releng/org.corpus_tools.hexatomic.product/target/products/hexatomic-*-win32.win32.x86_64.zip  
            draft: true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy_macos:
    name: Deploy release MacOS binaries
    runs-on: macos-13
    steps:
        - name: Checkout
          uses: actions/checkout@v4
        - uses: actions/setup-java@v4
          with:
            java-version: '17'
            distribution: 'temurin'
        - name: Set up Maven
          uses: stCarolas/setup-maven@v5
          with:
            maven-version: 3.8.7
        - name: Run Maven install (excludes tests since they currently fail on macOS) and re-create CFF file
          run: mvn -Pcff -DskipTests clean install
          env:
            LANG: en_US.UTF-8
        - name: Build again with updated CFF file
          run: mvn -DskipTests clean verify
          env:
            LANG: en_US.UTF-8
        - name: Remove code sign from generated app folder
          run: codesign --remove-signature releng/org.corpus_tools.hexatomic.product/target/products/org.corpus_tools.hexatomic.product/macosx/cocoa/x86_64/hexatomic.app
        - name: Create zip file from app folder
          run: zip -r hexatomic_unsigned.zip hexatomic.app/
          working-directory: releng/org.corpus_tools.hexatomic.product/target/products/org.corpus_tools.hexatomic.product/macosx/cocoa/x86_64/
        - name: Replace macOS release asset with the unsigned zip file
          run: mv releng/org.corpus_tools.hexatomic.product/target/products/org.corpus_tools.hexatomic.product/macosx/cocoa/x86_64/hexatomic_unsigned.zip releng/org.corpus_tools.hexatomic.product/target/products/hexatomic-*-macosx.cocoa.x86_64.zip
        - name: Release assets on GitHub
          uses: softprops/action-gh-release@v0.1.5
          with:
            files: releng/org.corpus_tools.hexatomic.product/target/products/hexatomic-*-macosx.cocoa.x86_64.zip
            draft: true
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  deploy_p2:
    name: Deploy P2 update site
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up Maven
      uses: stCarolas/setup-maven@v5
      with:
        maven-version: 3.8.7
    - name: Set JAVA_HOME to OpenJDK 17
      run: echo JAVA_HOME=$JAVA_HOME_17_X64 >> $GITHUB_ENV
    - name: Create P2 repository with Maven
      run: mvn -DskipTests clean install
    - name: Pushes P2 repository to "updates" Git repository
      uses: dmnemec/copy_file_to_another_repo_action@v1.1.1
      env:
        API_TOKEN_GITHUB: ${{ secrets.HEXATOMIC_UPLOAD_TOKEN }}
      with:
        source_file: 'releng/org.corpus_tools.hexatomic.product/target/repository'
        destination_repo: 'hexatomic/updates'
        # Change when we have a new major version
        destination_folder: 'v1'
        user_email: 'gh-actions@corpus-tools.org'
        user_name: 'GitHub Action CI'
        commit_message: 'Update documentation'
  deploy_documentation:
    name: Deploy documentation
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download and install mdBook 
        run: curl -L -o mdbook.tar.gz https://github.com/rust-lang-nursery/mdBook/releases/download/v$MDBOOK_VERSION/mdbook-v$MDBOOK_VERSION-x86_64-unknown-linux-gnu.tar.gz && tar -C $HOME/.cargo/bin/ -zvxf mdbook.tar.gz
        env:
          MDBOOK_VERSION: 0.3.1
      - name: Get the release version from the GITHUB_REF variable as new SHORT_VERSION variable
        run: echo "SHORT_VERSION=$(echo ${GITHUB_REF} | sed -E 's/^refs\/heads\/.*/develop/' | sed -E 's/^(refs\/tags\/v)?(.*)(\.[0-9]+)$/v\2/')" >> $GITHUB_ENV
      # Build all documentation
      - run: mdbook build --dest-dir book/user/${SHORT_VERSION} docs/user/
      - run: mdbook build --dest-dir book/dev/${SHORT_VERSION} docs/dev/
      - name: Checkout and prepare GitHub pages branch
        run: releng/sh/prepare-deploy-docs.sh
      # We use a special action to perform the push, so we can use the automatically created token
      - name: Push changes to GitHub pages branch
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: gh-pages
          branch: gh-pages
